version: 2.1

jobs:
  build:
    docker:
      - image: circleci/node:14.17
    steps:
      - checkout
      - run: npm install
      - run: npm test

  lint:
    docker:
      - image: circleci/node:14.17
    steps:
      - checkout
      - run: echo "Running linter"

  deploy_dev:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - run: echo "Deploying to dev environment"

  deploy_prod:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - run: pip install awscli
      - run: echo "Deploying to prod environment"

  performance_test:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - run: pip install locust
      - run: echo "Running performance tests"

  security_scan:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - run: pip install bandit
      - run: echo "Running security scan"

  test_integration:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - run: echo "Running integration tests"

  # build_android:
  #   docker:
  #     - image: circleci/android:api-29
  #   steps:
  #     - checkout
  #     - run: ./gradlew assembleDebug

  # deploy_android_beta:
  #   docker:
  #     - image: circleci/android:api-29
  #   steps:
  #     - checkout
  #     - run: ./gradlew assembleRelease
  #     - run: firebase appdistribution:distribute --app your-android-app --release-notes "Beta release" app/build/outputs/apk/release/app-release.apk

  # deploy_android_prod:
  #   docker:
  #     - image: circleci/android:api-29
  #   steps:
  #     - checkout
  #     - run: ./gradlew assembleRelease
  #     - run: firebase appdistribution:distribute --app your-android-app --release-notes "Production release" app/build/outputs/apk/release/app-release.apk

  # build_ios:
  #   macos:
  #     xcode: "12.5.1"
  #   steps:
  #     - checkout
  #     - run: xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -destination 'platform=iOS Simulator,name=iPhone 11,OS=14.5' clean build

  # deploy_ios_beta:
  #   macos:
  #     xcode: "12.5.1"
  #   steps:
  #     - checkout
  #     - run: xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -destination 'generic/platform=iOS' archive -archivePath build/YourApp.xcarchive
  #     - run: xcodebuild -exportArchive -archivePath build/YourApp.xcarchive -exportOptionsPlist exportOptions.plist -exportPath build/YourApp.ipa
  #     - run: fir publish build/YourApp.ipa
  # build_test:
  #   docker:
  #     - image: circleci/node:12
  #   steps:
  #     - checkout
  #     - run:
  #         name: Install npm dependencies
  #         command: |
  #           npm install --save	
  # build_docker_image:
  #   docker:
  #     - image: circleci/node:12
  #   steps:
  #     - checkout
  #     - setup_remote_docker:
  #         docker_layer_caching: false
  #     - run:
  #         name: Build Docker image
  #         command: |
  #           docker build -t nodejswebapp1 -t adijaiswal/nodejswebapp1:latest .
  #           echo $DOCKER_PASSWORD | docker login -u adijaiswal --password-stdin
  #           docker push adijaiswal/nodejswebapp1:latest

workflows:
  version: 2
  lint_and_build:
    jobs:
      - lint
      - build

  deploy_and_test:
    jobs:
      - deploy_dev:
          requires:
            - lint_and_build
      - deploy_prod:
          requires:
            - lint_and_build
      - performance_test:
          requires:
            - deploy_dev
            - deploy_prod
